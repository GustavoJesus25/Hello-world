- Terminologia:
    - GUI: Graphical User Interface
    - CLI: Command Line Interface
        - Terminal, console, etc
    - Unix, Linux, Mac:
        - Shell, bash
    - Windows:
        Command prompt, cmd, dos prompt, powershell
- Shell/bash commands:
    - pwd
    - ls
        - ls -la
        - Permissions: owner, group, world
        - r, w, x → 4, 2, 1 (d = directory)
        - rwxrwxrwx = owner, group, world
    - touch
    - clear
    - chmod
        - chmod options permissions filename
        - chmod 777 arquivo.ext
    - cd 
        - cd ../
        - cd qualquer/pasta/
    - env
    - rm [arquivo]
        - rm -rf [arquivo]
    - .bash_profile & .bashrc
        - .bash_profile is executed for login shells, while .bashrc is executed for interactive non-login shells. 
        - When you login (type username and password) via console, either sitting at the machine, or remotely via ssh: .bash_profile is executed to configure your shell before the initial command prompt.
    - nano [arquivo]
    - cat [arquivo]
    - grep
        - cat temp2.txt | grep enter

        - ls | grep -i documents


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

- $GOPATH/
    bin/
    pkg/
    src/
        github.com/
            [Nome do usuário (github.com)]/
                [Nome do projeto ou repo]/
                [Nome do projeto ou repo]/
                [Nome do projeto ou repo]/
                [Nome do projeto ou repo]/
                ...
                [Nome do projeto ou repo]/
- GOROOT: onde os binários da instalação do Go foram instalados
    - GOROOT="/usr/lib/go"
- GOPATH: onde seus arquivos de trabalho, seu workspace, fica localizado
    - GOPATH="/home/ellen/go"
    - export GOPATH=$HOME/go (.bashrc)
- Package management? go get.
    - Na prática → e.g. gouuid

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

- Integrated development environment. WP: "[...] é um programa de computador que reúne características e ferramentas de apoio ao desenvolvimento de software com o objetivo de agilizar este processo."
- IDEs:
    - Visual Studio Code → https://code.visualstudio.com/​
        - go get -v github.com/nsf/gocode
    - Goland → https://www.jetbrains.com/go/​ ($?)
    - Atom → https://atom.io/​
    - Sublime → https://www.sublimetext.com/​ ($)
- Fontes:
    - https://github.com/tonsky/FiraCode​

    - https://www.fsd.it/shop/fonts/pragmat...​ ($)

//////////////////////////////////////////////////////////////////////////////

- go version
- go env
- go help
- go fmt
    - ./…
- go run
    - go run [file name]
    - go run *.go
- go build
    - para um executável:
        - gera o arquivo binário
        - informa caso tenham havido erros
        - caso não hajam erros, cria um executável e salva-o no diretório atual
    - para um pacote:
        - gera o arquivo
        - informa caso tenham havido erros
        - descarta o executável
- go install
    - para um executável:
        - faz o build
        - nomeia o arquivo com o nome do diretório atual
        - salva o arquivo binário em $GOPATH/bin
    - para um pacote:
        - faz o build
        - salva o arquivo binário em $GOPATH/pkg
        - cria archive files (arquivo.a), os arquivos pré-compilados utilizados pelos imports
- flags
    - "-race"

////////////////////////////////////////////////////////////////////////////////////////////////////////

- Git foi feito pelo Linus Torvalds. O cara que criou o Linux.
- GitHub, GitLab.
- Como funciona?
    - Vá em github.com e crie um repo
    - Crie uma pasta com o mesmo nome no seu $GOPATH
        - $GOPATH/src/github.com/[username]/[repo]
    - Rode “git init” nesta pasta
    - Adicione arquivos, e.g. README.md e .gitignore
    - git add -A
    - git commit -m “here’s some commit message”
    - git remote add origin git@github.com:username/repo.git
    - git push -u origin master
- Comandos:
    - git status
    - git add --all
    - git commit -m "mensagem"
    - git push

///////////////////////////////////////////////////////////////////////////////
